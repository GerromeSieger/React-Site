name: Build and Deploy to GKE

on:
  push:
    branches: [ "main" ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
  DOCKER_TAG: ${{ github.sha }}

jobs:
 test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 18.x

      - name: Install Dependencies
        run: npm install

      - name: Build App
        run: npm run build

      - name: Run Shell script for testing
        run: sh test.sh   
        
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          
      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

  deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: build
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout React App
        uses: actions/checkout@v2
        
      - name: Install Google Cloud SDK
        run: |
          sudo apt-get install apt-transport-https ca-certificates gnupg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update && sudo apt-get install google-cloud-sdk google-cloud-sdk-gke-gcloud-auth-plugin kubectl

      - name: Configure gcloud
        run: |
          gcloud auth activate-refresh-token ${{ secrets.GCP_CLIENT_ID }} ${{ secrets.GCP_REFRESH_TOKEN }}
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GKE_CLUSTER_ZONE }}
        
      - name: Verify kubectl configuration
        run: |
          kubectl get nodes

      - name: Deploy the Kubernetes resources
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          awk -v image="${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}" '
            /image:/ {$0 = "        image: " image}
            {print}
          ' k8s/app.yml > temp.yml && mv temp.yml k8s/app.yml
          if [[ -n $(git status -s) ]]; then
            kubectl apply -f k8s/
          else
            echo "No changes detected in Kubernetes manifests."
          fi
