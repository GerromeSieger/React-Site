name: Build and Deploy to GKE

on:
  push:
    branches: [ "main" ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
  DOCKER_TAG: ${{ github.sha }}

jobs:
#  test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Setup Node.js environment
  #       uses: actions/setup-node@v4.0.2
  #       with:
  #         node-version: 18.x

  #     - name: Install Dependencies
  #       run: npm install

  #     - name: Build App
  #       run: npm run build

  #     - name: Run Shell script for testing
  #       run: sh test.sh   
        
  # build:
  #   runs-on: ubuntu-latest
  #   needs: test
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3

  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ env.DOCKER_USERNAME }}
  #         password: ${{ env.DOCKER_PASSWORD }}
          
  #     - name: Build and Push
  #       uses: docker/build-push-action@v3
  #       with:
  #         context: .
  #         push: true
  #         tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

  deploy:
    runs-on: ubuntu-latest
    environment: production
  #  needs: build
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout React App
        uses: actions/checkout@v2
        
      - name: Install Google Cloud SDK
        run: |
          sudo apt-get install apt-transport-https ca-certificates gnupg
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update && sudo apt-get install google-cloud-sdk

      - name: Configure gcloud
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
        run: |
          echo "$GOOGLE_APPLICATION_CREDENTIALS" > /tmp/gcloud.json
          gcloud auth activate-service-account --key-file=/tmp/gcloud.json
          gcloud auth application-default login
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud container clusters get-credentials ${{ secrets.GKE_CLUSTER_NAME }} --zone ${{ secrets.GKE_CLUSTER_ZONE }}
          rm /tmp/gcloud.json  # Clean up credentials file

      - name: Set up Kustomize
        run: |-
          cd k8s
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
          ./kustomize edit set image ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
