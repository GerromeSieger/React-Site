name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout React App
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18'

    - name: Install Dependencies
      run: echo "npm ci"

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:

    - name: Generate Docker Tag
      id: docker_tag
      run: echo "::set-output name=tag::$(echo ${GITHUB_SHA} | cut -c1-7)"

    - name: Build and Push Docker Image
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        docker build -t $DOCKER_IMAGE:${{ steps.docker_tag.outputs.tag }} .
        docker push $DOCKER_IMAGE:${{ steps.docker_tag.outputs.tag }}

    - name: Set Output
      id: vars
      run: echo "::set-output name=tag::${{ steps.docker_tag.outputs.tag }}"        

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:  
    - name: Checkout K8s Manifests Repo
      uses: actions/checkout@v2
      with:
        repository: ${{ secrets.K8S_MANIFEST_REPO }}
        token: ${{ secrets.MANIFEST_REPO_PAT }}

    - name: Update Kubernetes Manifests
      env:
        DOCKER_TAG: ${{ needs.build.outputs.docker_tag }} 
      run: |
        cd k8s-manifests
        sed -i 's|image: ${{ secrets.DOCKER_IMAGE }}:.*|image: ${{ secrets.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}|' k8s/app.yml
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .
        git commit -m "Update image tag to ${{ env.DOCKER_TAG }}"
        git push