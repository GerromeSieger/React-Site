name: Build and Deploy to GKE

on:
  push:
    branches: [ "main" ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_IMAGE: ${{ secrets.DOCKER_IMAGE }}
  DOCKER_TAG: ${{ github.sha }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 18.x

      - name: Install Dependencies
        run: npm install

      - name: Build App
        run: npm run build

      - uses: actions/upload-artifact@v1
        with:
          name: react-app
          path: build 
          
      - name: Download artifact
        uses: actions/download-artifact@v3
        with: 
          name: react-app
          path: build

      - name: Run Shell script for testing
        run: sh test.sh   
        
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}
          
      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

  deploy:
    runs-on: ubuntu-latest
    environment: production
    needs: build
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout React App
        uses: actions/checkout@v2
        
      - name: Create and populate kubeconfig
        env:
          KUBECONFIG_CONTENT: ${{ secrets.KUBECONFIG }}
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBECONFIG_CONTENT" >> $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/v1.28.0/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Verify kubectl configuration
        run: |
          git clone ${{ secrets.KUBE_MANIFEST_REPO }}
          kubectl get nodes

      - name: Set up Kustomize
        run: |-
          cd k8s
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize
          ./kustomize edit set image ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide
